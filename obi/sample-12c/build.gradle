plugins {
  id 'com.redpillanalytics.checkmate.obi' version '8.0.2'
  id 'maven-publish'
  //id 'pl.allegro.tech.build.axion-release' version '1.7.0'
  //id 'co.riiid.gradle' version '0.4.2'
}

// OBIEE Environment
// these can be overriden by environment variables or Gradle project properties
obi.middlewareHome = '/home/oracle/fmw/product/12.2.1.2/obi_1'
obi.domainHome = '/home/oracle/fmw/config/domains/bi'
obi.compatibility = '12.2.1.2'
obi.adminUser = 'weblogic'
obi.adminPassword = 'Admin123'
obi.repositoryPassword = 'Admin123'
obi.publishBar = false

// Hardcoding the version number
version = '0.0.9'
// Can also use Git-based versioning
// useScmRelease = true

publishing {
  repositories {
    // publish to Maven local repository, which is usually ~/.m2
    // This is only for testing purposes
    mavenLocal()
  }
}

dependencies {
  // Using the Checkmate Testing library which is recommended.
  obiee group: 'gradle.plugin.com.redpillanalytics', name: 'checkmate', version: '8.0.2'
  // You can also use Baseline Validation Tool
  // The installation needs to be available in one of your Maven repositories
  // If it exists, Checkmate will unzip and install it for you
  //obiee group: 'com.oracle', name: 'oracle-bvt', version: '12.2.1.0.0'

  // Dependencies on previous OBIEE builds
  // Used for building incremental patches, regression testing, and deployments
  //feature group: 'obiee', name: 'sample-12c-build', version: '+'
  //release group: 'obiee', name: 'sample-12c-build', version: '0.0.9'
  //promote group: 'obiee', name: 'sample-12c-deploy', version: '0.0.9'
  //promote group: 'obiee', name: 'sample-12c-bar', version: '0.0.9'
}

repositories {
  // resolve local maven repository for published distributions, which is usually ~/.m2
  // this is really only for testing purposes
  mavenLocal()
  // Gradle Plugin repository
  maven {
      url "https://plugins.gradle.org/m2/"
    }
}

// Define the regression "Test Groups" for regression testing
// This recreate several tasks beginning with "regression" for testing that catalog
// You can create as many Test groups as desired
obi.testGroups {
  regression {
    // the catalog folder to test. Recursively tests all analyses in that folder
    // accepts a colon (:) separeted list of directories
    libraryFolder = '/shared'
    // By default, hash values are used for comparision of results
    // You can force the full comparision of logical SQL and results (takes longer)
    compareText = false
    // Provide more output
    showOutput = false
  }
}
